#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
struct Node{
    int data;
    struct Node* next;
};
struct Node* head=NULL;

void createLL(int n){
    struct Node* temp=NULL;
    struct Node* newNode=NULL;
    int val;
    for(int i=0;i< n;i++){
        newNode=(struct Node*)malloc(sizeof(struct Node));
        printf("Enter data for node %d: ",i+1);
        scanf("%d",&val);
        newNode->data=val;
        newNode->next=NULL;
        if(head==NULL)
            head=newNode;
        else
            temp->next=newNode;
        temp=newNode;
    }
}
void displayLL(){
    if (head==NULL){
        printf("Linked List is empty.\n");
        return;
    }
    struct Node* temp=head;
    printf("Linked List: ");
    while(temp!=NULL){
        printf("%d ",temp->data);
        temp=temp->next;
    }
    printf("\n");
}
void deleteAtStart(){
    if(head==NULL){
        printf("List is empty.\n");
        return;
    }
    struct Node* temp=head;
    head=head->next;
    free(temp);
}
void deleteAtEnd(){
    if(head==NULL){
        printf("List is empty.\n");
        return;
    }
    if(head->next==NULL) {
        free(head);
        head=NULL;
        return;
    }
    struct Node* temp=head;
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
    free(temp->next);
    temp->next=NULL;
}
void deleteAtPos(int pos){
    if (head==NULL){
        printf("List is empty.\n");
        return;
    }
    if (pos==1){
        deleteAtStart();
        return;
    }
    struct Node* temp=head;
    for(int i=1;i<pos-1 && temp!=NULL;i++)
        temp=temp->next;

    if(temp==NULL || temp->next==NULL){
        printf("Position out of range.\n");
        return;
    }
    struct Node* delNode=temp->next;
    temp->next=delNode->next;
    free(delNode);
}
int main() {
    clrscr();
    int n,pos;
    printf("Firstly create a new linked list:\n");
    printf("Enter number of nodes: ");
    scanf("%d", &n);
    if(n<=0){
        printf("No nodes to create.\n");
        return 0;
    }
    createLL(n);
    displayLL();
    deleteAtStart();
    printf("Linked list after deleting node at the start:\n");
    displayLL();
    deleteAtEnd();
    printf("Linked list after deleting node at the end:\n");
    displayLL();
    printf("Enter the position of the node you want to delete: ");
    scanf("%d",&pos);
    deleteAtPos(pos);
    printf("Linked list after deleting node at position %d:\n",pos);
    displayLL();
    return 0;
}
